#!/bin/bash
set -euo pipefail

# –ë–µ–∑–ø–µ—á–Ω—ñ—à–∞ –ª–æ–∫–∞–ª—å —Ç–∞ IFS
export LC_ALL=C
IFS=$' \t\n'

install() {
  # ===== –£—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–æ–≥–æ –≤–∏–≤–æ–¥—É =====
  # —è–∫—â–æ utils.sh –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∑–Ω–∞—á–∏–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –∑–∞–≥–ª—É—à–∫–∏
  if ! curl -fsSL https://raw.githubusercontent.com/CPITMschool/Scripts/main/utils.sh >/tmp/utils.sh 2>/dev/null; then
    printColor() { echo -e "$2"; }
    logo() { echo "=== 0G Storage Installer ==="; }
    printLine() { printf '%*s\n' "${COLUMNS:-80}" '' | tr ' ' -; }
  else
    # shellcheck disable=SC1091
    source /tmp/utils.sh
  fi

  clear
  logo
  printColor blue "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–∫–µ—Ç—ñ–≤ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"

  sudo apt update && sudo apt upgrade -y
  sudo apt install -y curl git wget htop tmux build-essential jq make gcc tar clang \
    pkg-config libssl-dev ncdu cmake protobuf-compiler

  # ===== –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Go =====
  printColor blue "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Go"
  cd "$HOME"
  VER="1.21.3"
  wget -q "https://golang.org/dl/go${VER}.linux-amd64.tar.gz"
  sudo rm -rf /usr/local/go
  sudo tar -C /usr/local -xzf "go${VER}.linux-amd64.tar.gz"
  rm -f "go${VER}.linux-amd64.tar.gz"
  # –¥–æ–¥–∞–º–æ PATH, —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
  grep -q '/usr/local/go/bin' ~/.bash_profile 2>/dev/null || echo 'export PATH=$PATH:/usr/local/go/bin:~/go/bin' >> ~/.bash_profile
  # –∑–∞—Å—Ç–æ—Å—É—î–º–æ PATH –≤ –ø–æ—Ç–æ—á–Ω—ñ–π —Å–µ—Å—ñ—ó
  export PATH="$PATH:/usr/local/go/bin:$HOME/go/bin"
  mkdir -p "$HOME/go/bin"

  # ===== –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Rust =====
  printColor blue "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Rust"
  curl --proto '=https' --tlsv1.2 -fsSL https://sh.rustup.rs | sh -s -- -y
  # shellcheck disable=SC1090
  source "$HOME/.cargo/env"

  # ===== –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è —Ç–∞ –∑–±—ñ—Ä–∫–∞ =====
  printColor blue "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è 0G Storage"
  cd "$HOME"
  if [[ -d "0g-storage-node" ]]; then
    echo "‚ùó –ö–∞—Ç–∞–ª–æ–≥ 0g-storage-node –≤–∂–µ —ñ—Å–Ω—É—î. –í–∏–¥–∞–ª—ñ—Ç—å –∞–±–æ –ø–µ—Ä–µ–π–º–µ–Ω—É–π—Ç–µ –π–æ–≥–æ –¥–ª—è –ø–µ—Ä–µ–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è."
    exit 1
  fi

  git clone https://github.com/0glabs/0g-storage-node.git
  cd 0g-storage-node
  git fetch --all --tags
  git submodule update --init
  cargo build --release

  # ===== –ó–±—ñ—Ä –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ =====
  printColor blue "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–¥–∏"

  # RPC –≤–≤–æ–¥–∏–º–æ –∑–∞–≤–∂–¥–∏ –∑ /dev/tty (–Ω–∞–≤—ñ—Ç—å —è–∫—â–æ stdin –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π)
  if ! read -r -p "–í–≤–µ–¥—ñ—Ç—å –±—É–¥—å-—è–∫–∏–π RPC –∑ https://www.astrostake.xyz/0g-status: " BLOCKCHAIN_RPC_ENDPOINT < /dev/tty; then
    echo -e "\033[31m‚úñ –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ RPC –∑ /dev/tty. –ó–∞–ø—É—Å—Ç—ñ—Ç—å —É —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º—É —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ.\033[0m"
    exit 1
  fi
  BLOCKCHAIN_RPC_ENDPOINT="${BLOCKCHAIN_RPC_ENDPOINT//[[:space:]]/}"
  if [[ -z "$BLOCKCHAIN_RPC_ENDPOINT" ]]; then
    echo -e "\033[31m‚úñ RPC –Ω–µ –≤–≤–µ–¥–µ–Ω–æ. –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è.\033[0m"
    exit 1
  fi

  ENR_ADDRESS="$(wget -qO- eth0.me || true)"
  if [[ -z "${ENR_ADDRESS}" ]]; then
    echo -e "\033[33m‚ö† –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ ENR –∞–¥—Ä–µ—Å—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –í–∫–∞–∂—ñ—Ç—å –≤—Ä—É—á–Ω—É —É –∫–æ–Ω—Ñ—ñ–≥—É –ø—ñ–∑–Ω—ñ—à–µ.\033[0m"
  fi

  # –ú–∏—Ç—Ç—î–≤—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è sed, –∞ —Ç–∞–∫–æ–∂ –∑–±–µ—Ä–µ–∂–µ–º–æ –≤ ~/.bashrc –Ω–∞ –º–∞–π–±—É—Ç–Ω—î
  LOG_CONTRACT_ADDRESS="0xbD75117F80b4E22698D0Cd7612d92BDb8eaff628"
  MINE_CONTRACT="0x3A0d1d67497Ad770d6f72e7f4B8F0BAbaa2A649C"
  REWARD_CONTRACT="0xd3D4D91125D76112AE256327410Dd0414Ee08Cb4"
  ZGS_LOG_SYNC_BLOCK="326165"

  {
    echo "export ENR_ADDRESS=${ENR_ADDRESS}"
    echo "export LOG_CONTRACT_ADDRESS=${LOG_CONTRACT_ADDRESS}"
    echo "export MINE_CONTRACT=${MINE_CONTRACT}"
    echo "export REWARD_CONTRACT=${REWARD_CONTRACT}"
    echo "export ZGS_LOG_SYNC_BLOCK=${ZGS_LOG_SYNC_BLOCK}"
    echo "export BLOCKCHAIN_RPC_ENDPOINT=\"${BLOCKCHAIN_RPC_ENDPOINT}\""
  } >> "$HOME/.bashrc"

  # ===== –ö–æ–Ω—Ñ—ñ–≥ =====
  CONFIG_PATH="$HOME/0g-storage-node/run/config-testnet-turbo.toml"
  mkdir -p "$HOME/0g-storage-node/run"
  if ! wget -q -O "$CONFIG_PATH" "https://server-5.itrocket.net/testnet/og/storage/config-testnet-turbo.toml"; then
    echo -e "\033[31m‚úñ –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ config-testnet-turbo.toml\033[0m"
    exit 1
  fi

  printColor blue "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–æ–≥–æ —Ñ–∞–π–ª—É‚Ä¶"
  sed -i "s@^\s*#\?\s*network_dir.*@network_dir = \"network\"@g"                        "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_listen_address.*@network_listen_address = \"0.0.0.0\"@g"  "$CONFIG_PATH"
  [[ -n "$ENR_ADDRESS" ]] && sed -i "s@^\s*#\?\s*network_enr_address.*@network_enr_address = \"$ENR_ADDRESS\"@g" "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_enr_tcp_port.*@network_enr_tcp_port = 1234@g"            "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_enr_udp_port.*@network_enr_udp_port = 1234@g"            "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_libp2p_port.*@network_libp2p_port = 1234@g"              "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_discovery_port.*@network_discovery_port = 1234@g"        "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_target_peers.*@network_target_peers = 100@g"              "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*rpc_listen_address.*@rpc_listen_address = \"0.0.0.0:5678\"@g"     "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*db_dir.*@db_dir = \"db\"@g"                                        "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*log_config_file.*@log_config_file = \"log_config\"@g"              "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*log_directory.*@log_directory = \"log\"@g"                         "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_boot_nodes.*@network_boot_nodes = \[\"/ip4/47.251.117.133/udp/1234/p2p/16Uiu2HAmTVDGNhkHD98zDnJxQWu3i1FL1aFYeh9wiQTNu4pDCgps\",\"/ip4/47.76.61.226/udp/1234/p2p/16Uiu2HAm2k6ua2mGgvZ8rTMV8GhpW71aVzkQWy7D37TTDuLCpgmX\"]@g" "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_private.*@network_private = false@g"                      "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*network_disable_discovery.*@network_disable_discovery = false@g"  "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*discv5_request_timeout_secs.*@discv5_request_timeout_secs = 10@g" "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*discv5_query_peer_timeout_secs.*@discv5_query_peer_timeout_secs = 5@g" "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*discv5_request_retries.*@discv5_request_retries = 3@g"            "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*log_contract_address.*@log_contract_address = \"$LOG_CONTRACT_ADDRESS\"@g" "$CONFIG_PATH"
  # –í–ê–ñ–õ–ò–í–û: –ø—Ä–∏–±–µ—Ä–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—É –∑–∞–º—ñ–Ω—É listen_address ‚Üí rpc_listen_address
  sed -i "s@^\s*#\?\s*mine_contract_address.*@mine_contract_address = \"$MINE_CONTRACT\"@g" "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*reward_contract_address.*@reward_contract_address = \"$REWARD_CONTRACT\"@g" "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*log_sync_start_block_number.*@log_sync_start_block_number = $ZGS_LOG_SYNC_BLOCK@g" "$CONFIG_PATH"
  sed -i "s@^\s*#\?\s*blockchain_rpc_endpoint.*@blockchain_rpc_endpoint = \"$BLOCKCHAIN_RPC_ENDPOINT\"@g" "$CONFIG_PATH"
  sed -i "s@^# \[sync\]@\[sync\]@g"                                                     "$CONFIG_PATH"
  sed -i "s@^# auto_sync_enabled = false@auto_sync_enabled = true@g"                     "$CONFIG_PATH"
  sed -i "s@^# find_peer_timeout = .*@find_peer_timeout = \"30s\"@g"                     "$CONFIG_PATH"

  # ===== –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á (—á–∏—Ç–∞–Ω–Ω—è –∑ /dev/tty, –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ) =====
  echo -e "\033[1;33m[6/9] –í–≤–µ–¥—ñ—Ç—å –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á:\033[0m"
  if ! read -r -s -p "üîë Private Key: " PRIVATE_KEY < /dev/tty; then
    echo -e "\n\033[31m‚úñ –ù–µ –≤–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –∑ /dev/tty. –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç —É —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ–π –∫–æ–Ω—Å–æ–ª—ñ.\033[0m"
    exit 1
  fi
  echo
  TRIMMED_KEY="${PRIVATE_KEY//[[:space:]]/}"
  if [[ -z "$TRIMMED_KEY" ]]; then
    echo -e "\033[31m‚úñ –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –Ω–µ –≤–≤–µ–¥–µ–Ω–æ. –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è.\033[0m"
    exit 1
  fi

  # –ó–∞–ø–∏—Å —É –∫–æ–Ω—Ñ—ñ–≥ (—Å—Ç–≤–æ—Ä–∏—Ç—å —Ä—è–¥–æ–∫, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î)
  if grep -q '^miner_key' "$CONFIG_PATH"; then
    sed -i "/^miner_key/c\miner_key = \"$PRIVATE_KEY\"" "$CONFIG_PATH"
  else
    printf '\nminer_key = "%s"\n' "$PRIVATE_KEY" >> "$CONFIG_PATH"
  fi
  echo -e "\033[32m‚úî Private key added.\033[0m\n"

  # ===== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É =====
  echo -e "\033[1;33m[7/9] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...\033[0m"
  grep -E "^(miner_key|rpc_listen_address|blockchain_rpc_endpoint)" "$CONFIG_PATH" || true
  echo ""

  # ===== systemd —Å–µ—Ä–≤—ñ—Å =====
  echo -e "\033[1;33m[8/9] –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd-—Å–µ—Ä–≤—ñ—Å—É‚Ä¶\033[0m"
  sudo tee /etc/systemd/system/zgs.service >/dev/null <<EOF
[Unit]
Description=ZGS Node
After=network.target

[Service]
User=$USER
WorkingDirectory=$HOME/0g-storage-node/run
ExecStart=$HOME/0g-storage-node/target/release/zgs_node --config $HOME/0g-storage-node/run/config-testnet-turbo.toml
Restart=on-failure
RestartSec=10
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF

  sudo systemctl daemon-reload
  sudo systemctl enable zgs
  sudo systemctl restart zgs

  printColor blue "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è 0G Storage node –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
  echo ""
  printLine
  printColor blue "–õ–æ–≥–∏:                     >>> tail -f ~/0g-storage-node/run/log/zgs.log.\$(TZ=UTC date +%Y-%m-%d)"
  printColor blue "–í–µ—Ä—Å—ñ—è –Ω–æ–¥–∏:              >>> \$HOME/0g-storage-node/target/release/zgs_node --version"
  printColor blue "–ü–µ—Ä–µ–≥–ª—è–¥ miner key:       >>> grep '^miner_key' $CONFIG_PATH | sed 's/miner_key = \"\\(.*\\)\"/\\1/'"
  printLine
}

install
