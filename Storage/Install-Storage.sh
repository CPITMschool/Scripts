```bash
#!/bin/bash
set -e

function install() {
    # –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –±–∞–∑–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
    source <(curl -s https://raw.githubusercontent.com/CPITMschool/Scripts/main/utils.sh)

    clear
    logo
    printColor blue "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–∫–µ—Ç—ñ–≤ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"

    sudo apt update && sudo apt upgrade -y
    sudo apt install curl git wget htop tmux build-essential jq make gcc tar clang pkg-config libssl-dev ncdu cmake -y

    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Go
    printColor blue "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Go"
    cd $HOME
    VER="1.22.0"
    wget "https://golang.org/dl/go$VER.linux-amd64.tar.gz"
    sudo rm -rf /usr/local/go
    sudo tar -C /usr/local -xzf "go$VER.linux-amd64.tar.gz"
    rm "go$VER.linux-amd64.tar.gz"

    [ ! -d "$HOME/go/bin" ] && mkdir -p "$HOME/go/bin"
    echo 'export PATH=$PATH:/usr/local/go/bin:~/go/bin' >> ~/.bashrc
    source $HOME/.bashrc
    
    go version

    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Rust
    printColor blue "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Rust"
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    source $HOME/.cargo/env

    # –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è —ñ –ø–æ–±—É–¥–æ–≤–∞ –±—ñ–Ω–∞—Ä–Ω–∏–∫—ñ–≤
    printColor blue "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è 0G Storage"
    cd $HOME
    if [ -d "0g-storage-node" ]; then
        echo "‚ùó –ö–∞—Ç–∞–ª–æ–≥ 0g-storage-node –≤–∂–µ —ñ—Å–Ω—É—î. –í–∏–¥–∞–ª—ñ—Ç—å –π–æ–≥–æ, —â–æ–± –ø–µ—Ä–µ–≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏."
        exit 1
    fi

    git clone https://github.com/0glabs/0g-storage-node.git
    cd 0g-storage-node
    git fetch --all --tags
    git submodule update --init
    cargo build --release

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Ç–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
    printColor blue "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–¥–∏"
    read -p "–í–≤–µ–¥—ñ—Ç—å –ª—é–±–∏–π RPC –∑ —Å–∞–π—Ç—É https://www.astrostake.xyz/0g-status: " BLOCKCHAIN_RPC_ENDPOINT
    
    if [[ -z "$BLOCKCHAIN_RPC_ENDPOINT" ]]; then
        echo -e "\033[31m‚úñ RPC –Ω–µ –≤–≤–µ–¥–µ–Ω–∞. –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è.\033[0m"
        exit 1
    fi

    ENR_ADDRESS=$(wget -qO- eth0.me)
    echo "export ENR_ADDRESS=$ENR_ADDRESS" >> ~/.bashrc
    echo 'export LOG_CONTRACT_ADDRESS="0xbD75117F80b4E22698D0Cd7612d92BDb8eaff628"' >> ~/.bashrc
    echo 'export MINE_CONTRACT="0x3A0d1d67497Ad770d6f72e7f4B8F0BAbaa2A649C"' >> ~/.bashrc
    echo 'export REWARD_CONTRACT="0xd3D4D91125D76112AE256327410Dd0414Ee08Cb4"' >> ~/.bashrc
    echo 'export ZGS_LOG_SYNC_BLOCK="326165"' >> ~/.bashrc
    echo "export BLOCKCHAIN_RPC_ENDPOINT=\"$BLOCKCHAIN_RPC_ENDPOINT\"" >> ~/.bashrc
    source ~/.bashrc

    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–æ–≥–æ —Ñ–∞–π–ª—É
    CONFIG_PATH="$HOME/0g-storage-node/run/config-testnet-turbo.toml"
    mkdir -p $HOME/0g-storage-node/run
    if ! wget -O "$CONFIG_PATH" https://server-5.itrocket.net/testnet/og/storage/config-testnet-turbo.toml; then
        echo -e "\033[31m‚úñ –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ config-testnet-turbo.toml\033[0m"
        exit 1
    fi

    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∑–º—ñ–Ω–Ω–∏—Ö
    sed -i 's|^\s*#\?\s*network_dir\s*=.*|network_dir = "network"|s|^\s*#\?\s*network_listen_address\s*=.*|network_listen_address = "0.0.0.0"|s|^\s*#\?\s*network_enr_address\s*=.*|network_enr_address = "'"$ENR_ADDRESS"'"|s|^\s*#\?\s*network_enr_tcp_port\s*=.*|network_enr_tcp_port = 1234|s|^\s*#\?\s*network_enr_udp_port\s*=.*|network_enr_udp_port = 1234|s|^\s*#\?\s*network_libp2p_port\s*=.*|network_libp2p_port = 1234|s|^\s*#\?\s*network_discovery_port\s*=.*|network_discovery_port = 1234|s|^\s*#\?\s*network_target_peers\s*=.*|network_target_peers = 100|s|^\s*#\s*rpc_listen_address\s*=.*|rpc_listen_address = "0.0.0.0:5678"|s|^\s*#\?\s*db_dir\s*=.*|db_dir = "db"|s|^\s*#\?\s*log_config_file\s*=.*|log_config_file = "log_config"|s|^\s*#\?\s*log_directory\s*=.*|log_directory = "log"|s|^\s*#\?\s*network_boot_nodes\s*=.*|network_boot_nodes = \["/ip4/47.251.117.133/udp/1234/p2p/16Uiu2HAmTVDGNhkHD98zDnJxQWu3i1FL1aFYeh9wiQTNu4pDCgps","/ip4/47.76.61.226/udp/1234/p2p/16Uiu2HAm2k6ua2mGgvZ8rTMV8GhpW71aVzkQWy7D37TTDuLCpgmX"]|s|^\s*#\?\s*network_private\s*=.*|network_private = false|s|^\s*#\?\s*network_disable_discovery\s*=.*|network_disable_discovery = false|s|^\s*#\?\s*discv5_request_timeout_secs\s*=.*|discv5_request_timeout_secs = 10|s|^\s*#\?\s*discv5_query_peer_timeout_secs\s*=.*|discv5_query_peer_timeout_secs = 5|s|^\s*#\?\s*discv5_request_retries\s*=.*|discv5_request_retries = 3|s|^\s*#\?\s*log_contract_address\s*=.*|log_contract_address = "'"$LOG_CONTRACT_ADDRESS"'"|s|^\s*#\?\s*listen_address\s*=.*|rpc_listen_address = "0.0.0.0:5678"|s|^\s*#\?\s*mine_contract_address\s*=.*|mine_contract_address = "'"$MINE_CONTRACT"'"|s|^\s*#\?\s*reward_contract_address\s*=.*|reward_contract_address = "'"$REWARD_CONTRACT"'"|s|^\s*#\?\s*log_sync_start_block_number\s*=.*|log_sync_start_block_number = '"$ZGS_LOG_SYNC_BLOCK"'|s|^\s*#\?\s*blockchain_rpc_endpoint\s*=.*|blockchain_rpc_endpoint = "'"$BLOCKCHAIN_RPC_ENDPOINT"'"|s|^# \[sync\]|\[sync\]|s|^# auto_sync_enabled = false|auto_sync_enabled = true|s|^# find_peer_timeout = .*|find_peer_timeout = "30s"|' "$CONFIG_PATH"
    
    echo -e "\033[1;33m[6/9] –í–≤–µ–¥—ñ—Ç—å –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á:\033[0m"
    read -p "üîë Private Key: " PRIVATE_KEY

    if [[ -z "$PRIVATE_KEY" ]]; then
        echo -e "\033[31m‚úñ –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –Ω–µ –≤–≤–µ–¥–µ–Ω–æ. –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è.\033[0m"
        exit 1
    fi

    sed -i "/^miner_key/c\miner_key = \"$PRIVATE_KEY\"" "$CONFIG_PATH"
    echo -e "\033[32m‚úî Private key added.\033[0m\n"

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É
    echo -e "\033[1;33m[7/9] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...\033[0m"
    grep -E "^(miner_key|rpc_listen_address|blockchain_rpc_endpoint)" "$CONFIG_PATH" || true
    echo ""

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd-—Å–µ—Ä–≤—ñ—Å—É
    echo -e "\033[1;33m[8/9] –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd-—Å–µ—Ä–≤—ñ—Å—É...\033[0m"
sudo tee /etc/systemd/system/zgs.service > /dev/null <<EOF
[Unit]
Description=ZGS Node
After=network.target

[Service]
User=$USER
WorkingDirectory=$HOME/0g-storage-node/run
ExecStart=$HOME/0g-storage-node/target/release/zgs_node --config $HOME/0g-storage-node/run/config-testnet-turbo.toml
Restart=on-failure
RestartSec=10
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF

    sudo systemctl daemon-reload
    sudo systemctl enable zgs
    sudo systemctl restart zgs

    printColor blue "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è 0G Storage node –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    echo ""
    printLine
    printColor blue "–ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–≥—ñ–≤:            >>> tail -f ~/0g-storage-node/run/log/zgs.log.$(TZ=UTC date +%Y-%m-%d)"
    printColor blue "–í–µ—Ä—Å—ñ—è –Ω–æ–¥–∏:               >>> $HOME/0g-storage-node/target/release/zgs_node --version"
    printColor blue "–ü–µ—Ä–µ–≥–ª—è–¥ miner key:        >>> grep '^miner_key' $CONFIG_PATH | sed 's/miner_key = \"\\(.*\\)\"/\\1/'"
    printLine
}

install
```
